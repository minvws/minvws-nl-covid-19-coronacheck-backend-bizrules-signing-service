name: Python application

on: [ push, pull_request ]

jobs:
  build:
    env:
      USE_PYTEST_REDIS: False

    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [ 3.8 ]
    continue-on-error: false

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v4
        id: cache-venv
        with:
          path: ./.venv/  # we cache: the virtualenv
          # The cache key depends on requirements*.txt
          key: ${{ runner.os }}-${{ matrix.python-version }}-venv-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-venv-
      # Build a virtualenv, but only if it doesn't already exist
      - name: Make venv
        run: make venv
        if: steps.cache-venv.outputs.cache-hit != 'true'
      - name: Sync dependencies
        run: make pip-sync-dev
      - name: Check linting
        run: make check
      - name: Start Redis
        uses: supercharge/redis-github-action@1.2.0
        with:
          redis-version: 6
      - name: Test
        run: make test
      - name: Audit
        run: make audit
      - name: Lint
        run: make lint
      - name: check-types
        run: make check-types

### General ###
SECRETS_FOLDER = api/tests/secrets
EVENT_DATA_PROVIDERS_FILENAME = vaccinationproviders.json5
DYNAMIC_FLOW_JWT_PRIVATE_KEY_FILENAME = jwt_private.key
SBVZ_CERT_FILENAME = sbvz-connect.test.brba.nl.cert
SBVZ_WSDL_ENVIRONMENT = mock

### SIGNING ###
# git clone https://github.com/minvws/nl-covid19-coronacheck-idemix-private/
# add certs (todo, point to readme)
# go run ./ server
DOMESTIC_NL_VWS_PREPARE_ISSUE_URL = http://localhost:4001/prepare_issue
DOMESTIC_NL_VWS_PAPER_SIGNING_URL = https://signing.local/static
DOMESTIC_NL_VWS_ONLINE_SIGNING_URL = http://localhost:4001/issue
# git clone https://github.com/minvws/nl-covid19-coronacheck-hcert-private
# add certs (todo, point to readme)
# go run ./ server
EU_INTERNATIONAL_SIGNING_URL = http://localhost:4002/get_credential

### TVS/INGE6 ###
INGE6_BSN_RETRIEVAL_URL = https://tvs-connect.acc.coronacheck.nl/bsn_attribute

############################################################################################
#         WARNING!!!!!                                                                     #
# The following value should be False in production environments since it weakens          #
# Since it severely impacts security (since mocks and nonces don't go well together)       #
############################################################################################
MOCK_MODE = True


### NaCL Crypto ###
# these are all assumed to be in the secrets folder
INGE4_NACL_PRIVATE_KEY_FILE = inge4_NaCl
INGE4_NACL_PUBLIC_KEY_FILE = inge4_NaCl.pub
INGE6_NACL_PUBLIC_KEY_FILE = inge6_NaCl.pub

### SESSION_STORE ###
#256 bits
NONCE_BYTE_SECURITY = 32
EXPIRATION_TIME_IN_SECONDS = 60
REDIS_KEY_PREFIX = "inge4_session"

# support different testing environments
# if set to True use
# the redis the redis executable defined by
# redis_exec = /usr/local/bin/redis-server
# in setup.cfg for pytest tests involving redis
# if set to False one needs to have a running redis client
# runing on localhost listening on 6379
USE_PYTEST_REDIS = True




#These parameters are used to configure the Redis client https://pypi.org/project/redis/
REDIS_HOST = localhost
REDIS_PORT = 6379
REDIS_DB = 1
REDIS_PASSWORD =
REDIS_SOCKET_TIMEOUT = 30
REDIS_ENCODING = ascii
REDIS_RETRY_ON_TIMEOUT = True

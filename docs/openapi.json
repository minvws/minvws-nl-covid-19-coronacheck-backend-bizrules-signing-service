{"openapi": "3.0.2", "info": {"title": "FastAPI", "version": "0.1.0"}, "paths": {"/health": {"get": {"summary": "Health", "operationId": "health_health_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/": {"get": {"summary": "Health", "operationId": "health__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/app/access_tokens/": {"post": {"summary": "Sign Via App Step 1", "description": "Creates unomi events based on DigiD BSN retrieval token.\n.. image:: ./docs/sequence-diagram-unomi-events.png\n\n:param request: BSNRetrievalToken\n:return:", "operationId": "sign_via_app_step_1_app_access_tokens__post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/BSNRetrievalToken"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"title": "Response Sign Via App Step 1 App Access Tokens  Post", "type": "array", "items": {"$ref": "#/components/schemas/UnomiEventToken"}}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/app/paper/": {"post": {"summary": "Sign Via Inge3", "operationId": "sign_via_inge3_app_paper__post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/StatementOfVaccination"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaperProofOfVaccination"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/app/prepare_issue/": {"post": {"summary": "App Prepare Issue", "operationId": "app_prepare_issue_app_prepare_issue__post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PrepareIssueMessage"}}}}}}}, "/app/sign/": {"post": {"summary": "Sign Via App Step 2", "operationId": "sign_via_app_step_2_app_sign__post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/StepTwoData"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MobileAppProofOfVaccination"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"BSNRetrievalToken": {"title": "BSNRetrievalToken", "required": ["tvs_token"], "type": "object", "properties": {"tvs_token": {"title": "Tvs Token", "type": "string", "description": "TVS/DigiD token required to fetch BSN"}}}, "DomesticGreenCard": {"title": "DomesticGreenCard", "required": ["origins", "createCredentialMessages"], "type": "object", "properties": {"origins": {"title": "Origins", "type": "array", "items": {"$ref": "#/components/schemas/GreenCardOrigin"}}, "createCredentialMessages": {"title": "Createcredentialmessages", "type": "string"}}}, "DomesticStaticQrAttributes": {"title": "DomesticStaticQrAttributes", "required": ["sampleTime", "firstNameInitial", "lastNameInitial", "birthDay", "birthMonth", "isSpecimen"], "type": "object", "properties": {"sampleTime": {"title": "Sampletime", "type": "string", "description": "Unix Timestamp", "example": "1619092800"}, "firstNameInitial": {"title": "Firstnameinitial", "type": "string", "description": "First letter of the first name of this person", "example": "E"}, "lastNameInitial": {"title": "Lastnameinitial", "type": "string", "description": "First letter of the last name of this person", "example": "J"}, "birthDay": {"title": "Birthday", "type": "string", "description": "Day (not date!) of birth.", "example": "27"}, "birthMonth": {"title": "Birthmonth", "type": "string", "description": "Month (not date!) of birth.", "example": "12"}, "isPaperProof": {"title": "Ispaperproof", "type": "string", "default": "1", "example": "1"}, "isSpecimen": {"title": "Isspecimen", "type": "string", "description": "Boolean cast as string, if this is a testcase. To facilitate testing in production.", "example": "0"}}}, "DomesticStaticQrCode": {"title": "DomesticStaticQrCode", "required": ["data", "attributesIssued"], "type": "object", "properties": {"data": {"title": "Data", "type": "string", "example": "TF+*JY+21:6 T%NCQ+ PVHDDP+Z-WQ8-TG/O3NLFLH3:FH:O.KCG9F997/..."}, "attributesIssued": {"$ref": "#/components/schemas/DomesticStaticQrAttributes"}}}, "DomesticStaticQrResponse": {"title": "DomesticStaticQrResponse", "required": ["qr", "status", "error"], "type": "object", "properties": {"qr": {"$ref": "#/components/schemas/DomesticStaticQrCode"}, "status": {"title": "Status", "type": "string", "example": "ok"}, "error": {"title": "Error", "type": "integer", "example": 0}}, "description": "{\n    \"qr\": {\n        \"data\": \"TF+*JY+21:6 T%NCQ+ PVHDDP+Z-WQ8-TG/O3NLFLH3:FHS-RIFVQ:UV57K/.:R6+.MX:U$HIQG3FVY%6NIN0:O.KCG9F997/\",\n        \"attributesIssued\": {\n            \"sampleTime\": \"1619092800\",\n            \"firstNameInitial\": \"B\",\n            \"lastNameInitial\": \"B\",\n            \"birthDay\": \"27\",\n            \"birthMonth\": \"4\",\n            \"isSpecimen\": \"1\",\n            \"isPaperProof\": \"1\",\n        }\n    },\n    \"status\": \"ok\",\n    \"error\": 0\n}"}, "EUGreenCard": {"title": "EUGreenCard", "required": ["origins", "credential"], "type": "object", "properties": {"origins": {"title": "Origins", "type": "array", "items": {"$ref": "#/components/schemas/GreenCardOrigin"}}, "credential": {"title": "Credential", "type": "string"}}}, "Event": {"title": "Event", "required": ["type", "unique", "data"], "type": "object", "properties": {"type": {"allOf": [{"$ref": "#/components/schemas/EventType"}], "description": "Type of event"}, "unique": {"title": "Unique", "type": "string", "description": "todo", "format": "uuid", "example": "ee5afb32-3ef5-4fdf-94e3-e61b752dbed9"}, "isSpecimen": {"title": "Isspecimen", "type": "boolean", "description": "Boolean as an integer: 0 or 1.", "default": 0}, "data": {"title": "Data", "anyOf": [{"$ref": "#/components/schemas/vaccination"}, {"$ref": "#/components/schemas/test"}, {"$ref": "#/components/schemas/recovery"}], "description": "Structure is based on the 'type' discriminator."}}}, "EventType": {"title": "EventType", "enum": ["recovery", "test", "vaccination"], "type": "string", "description": "An enumeration."}, "GreenCardOrigin": {"title": "GreenCardOrigin", "required": ["type", "eventTime", "expirationTime", "validFrom"], "type": "object", "properties": {"type": {"title": "Type", "type": "string"}, "eventTime": {"title": "Eventtime", "type": "string"}, "expirationTime": {"title": "Expirationtime", "type": "string"}, "validFrom": {"title": "Validfrom", "type": "string"}}}, "HTTPValidationError": {"title": "HTTPValidationError", "type": "object", "properties": {"detail": {"title": "Detail", "type": "array", "items": {"$ref": "#/components/schemas/ValidationError"}}}}, "Holder": {"title": "Holder", "required": ["firstName", "lastName", "birthDate"], "type": "object", "properties": {"firstName": {"title": "Firstname", "type": "string", "example": "Herman"}, "lastName": {"title": "Lastname", "type": "string", "example": "Acker"}, "birthDate": {"title": "Birthdate", "type": "string", "description": "ISO 8601 date string (large to small, YYYY-MM-DD)", "format": "date", "example": "1970-01-01"}}}, "MobileAppProofOfVaccination": {"title": "MobileAppProofOfVaccination", "type": "object", "properties": {"domesticGreencard": {"$ref": "#/components/schemas/DomesticGreenCard"}, "euGreencards": {"title": "Eugreencards", "type": "array", "items": {"$ref": "#/components/schemas/EUGreenCard"}}}}, "PaperProofOfVaccination": {"title": "PaperProofOfVaccination", "type": "object", "properties": {"domesticProof": {"title": "Domesticproof", "type": "array", "items": {"$ref": "#/components/schemas/DomesticStaticQrResponse"}, "description": "Paper vaccination"}, "euProofs": {"title": "Euproofs", "type": "array", "items": {"$ref": "#/components/schemas/EUGreenCard"}}}}, "PrepareIssueMessage": {"title": "PrepareIssueMessage", "required": ["stoken", "prepareIssueMessage"], "type": "object", "properties": {"stoken": {"title": "Stoken", "type": "string", "format": "uuid", "example": "a019e902-86a0-4b1d-bff0-5c89f3cfc4d9"}, "prepareIssueMessage": {"title": "Prepareissuemessage", "type": "string", "description": "A Base64 encoded prepare_issue_message", "example": "eyJpc3N1ZXJQa0lkIjoiVFNULUtFWS0wMSIsImlzc3Vlck5vbmNlIjoiaDJvQlJva1A2UTJSQXB3Sk9LdStkQT09IiwiY3JlZGVudGlhbEFtb3VudCI6Mjh9"}}}, "StatementOfVaccination": {"title": "StatementOfVaccination", "required": ["providerIdentifier", "holder", "events"], "type": "object", "properties": {"protocolVersion": {"title": "Protocolversion", "type": "string", "description": "The semantic version of this API", "default": 3.0}, "providerIdentifier": {"title": "Provideridentifier", "type": "string", "description": "todo"}, "status": {"title": "Status", "type": "string", "description": "todo, enum probably", "default": "complete"}, "holder": {"$ref": "#/components/schemas/Holder"}, "events": {"title": "Events", "type": "array", "items": {"$ref": "#/components/schemas/Event"}}}}, "StepTwoData": {"title": "StepTwoData", "required": ["events", "stoken", "issueCommitmentMessage"], "type": "object", "properties": {"events": {"$ref": "#/components/schemas/StatementOfVaccination"}, "stoken": {"title": "Stoken", "type": "string", "format": "uuid", "example": "a019e902-86a0-4b1d-bff0-5c89f3cfc4d9"}, "issueCommitmentMessage": {"title": "Issuecommitmentmessage", "type": "string"}}}, "UnomiEventToken": {"title": "UnomiEventToken", "required": ["provider_identifier", "unomi", "event"], "type": "object", "properties": {"provider_identifier": {"title": "Provider Identifier", "type": "string"}, "unomi": {"title": "Unomi", "type": "string", "description": "JWT containing unomi data: iss aud iat nbf exp and identity_hash."}, "event": {"title": "Event", "type": "string", "description": "JWT containing event data: same as unomi + nonce and encrypted_bsn."}}}, "ValidationError": {"title": "ValidationError", "required": ["loc", "msg", "type"], "type": "object", "properties": {"loc": {"title": "Location", "type": "array", "items": {"type": "string"}}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}}, "recovery": {"title": "recovery", "required": ["sampleDate", "validFrom", "validUntil"], "type": "object", "properties": {"sampleDate": {"title": "Sampledate", "type": "string", "example": "2021-01-01"}, "validFrom": {"title": "Validfrom", "type": "string", "example": "2021-01-12"}, "validUntil": {"title": "Validuntil", "type": "string", "example": "2021-06-30"}}}, "test": {"title": "test", "required": ["sampleDate", "resultDate", "negativeResult", "facility", "type", "name", "manufacturer"], "type": "object", "properties": {"sampleDate": {"title": "Sampledate", "type": "string", "example": "2021-01-01"}, "resultDate": {"title": "Resultdate", "type": "string", "example": "2021-01-02"}, "negativeResult": {"title": "Negativeresult", "type": "boolean", "example": true}, "facility": {"title": "Facility", "type": "string", "example": "GGD XL Amsterdam"}, "type": {"title": "Type", "type": "string", "example": "???"}, "name": {"title": "Name", "type": "string", "example": "???"}, "manufacturer": {"title": "Manufacturer", "type": "string", "example": "1232"}}}, "vaccination": {"title": "vaccination", "required": ["date", "brand"], "type": "object", "properties": {"date": {"title": "Date", "type": "string", "example": "2021-01-01"}, "hpkCode": {"title": "Hpkcode", "type": "string", "description": "hpkcode.nl, will be used to fill EU fields", "example": "2924528"}, "type": {"title": "Type", "type": "string", "description": "Can be left blank if hpkCode is entered.", "example": "1119349007"}, "manufacturer": {"title": "Manufacturer", "type": "string", "description": "Can be left blank if hpkCode is entered.", "example": "ORG-100030215"}, "brand": {"title": "Brand", "type": "string", "example": "EU/1/20/1507"}, "completedByMedicalStatement": {"title": "Completedbymedicalstatement", "type": "boolean", "description": "If this vaccination is enough to be fully vaccinated"}, "country": {"title": "Country", "type": "string", "description": "Optional iso 3166 3-letter country field, will be set to NLD if left out. Can be used if shot was administered abroad", "default": "NLD", "example": "NLD"}, "doseNumber": {"title": "Dosenumber", "type": "integer", "description": "will be based on business rules / brand info if left out", "example": 1}, "totalDoses": {"title": "Totaldoses", "type": "integer", "description": "will be based on business rules / brand info if left out", "example": 2}}, "description": "When supplying data and you want to make it easy:\n- use a HPK Code and just the amount of events.\n\nnot use a HPK and then supply non-normalized names and doseNumber/totalDoses: this makes the\nlogic evermore complex and prone to errors when incorrectly normalizing input."}}}}
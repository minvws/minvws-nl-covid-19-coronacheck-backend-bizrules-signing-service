{"openapi": "3.0.2", "info": {"title": "FastAPI", "version": "0.1.0"}, "paths": {"/health": {"get": {"summary": "Health Request", "operationId": "health_request_health_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplicationHealth"}}}}}}}, "/": {"get": {"summary": "Health Request", "operationId": "health_request__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/app/access_tokens/": {"post": {"summary": "Get Access Tokens Request", "description": "Creates unomi events based on DigiD BSN retrieval token.\n.. image:: ./docs/sequence-diagram-unomi-events.png\n\n:param request: AccessTokensRequest\n:return:", "operationId": "get_access_tokens_request_app_access_tokens__post", "parameters": [{"required": false, "schema": {"title": "Authorization", "type": "string"}, "name": "authorization", "in": "header"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"title": "Response Get Access Tokens Request App Access Tokens  Post", "type": "array", "items": {"$ref": "#/components/schemas/EventDataProviderJWT"}}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/app/prepare_issue/": {"post": {"summary": "App Prepare Issue Request", "operationId": "app_prepare_issue_request_app_prepare_issue__post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PrepareIssueResponse"}}}}}}}, "/app/credentials/": {"post": {"summary": "App Credential Request", "operationId": "app_credential_request_app_credentials__post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CredentialsRequestData"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MobileAppProofOfVaccination"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/app/paper/": {"post": {"summary": "Inge3 Credential Request", "operationId": "inge3_credential_request_app_paper__post", "requestBody": {"content": {"application/json": {"schema": {"title": "Request Data", "type": "array", "items": {"$ref": "#/components/schemas/CMSSignedDataBlob"}}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MobileAppProofOfVaccination"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/documentation/DataProviderEventsResult/": {"post": {"summary": "Docs Dper", "operationId": "docs_dper_documentation_DataProviderEventsResult__post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataProviderEventsResult"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataProviderEventsResult"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/documentation/V2Event/": {"post": {"summary": "Docs V2E", "operationId": "docs_v2e_documentation_V2Event__post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/V2Event"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/V2Event"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"ApplicationHealth": {"title": "ApplicationHealth", "required": ["service_status"], "type": "object", "properties": {"running": {"title": "Running", "type": "boolean", "description": "Indication if the service is running at all. Usually true from the app itself.", "default": true}, "service_status": {"title": "Service Status", "type": "array", "items": {"$ref": "#/components/schemas/ServiceHealth"}}}, "description": "Show the system health and status of internal dependencies.\n\nIt does not show any specifics in case of errors, only vague hints of where to look. Always log the exception\nor error with log.exception() so operations can take a look."}, "CMSSignedDataBlob": {"title": "CMSSignedDataBlob", "required": ["signature", "payload"], "type": "object", "properties": {"signature": {"title": "Signature", "type": "string", "description": "CMS signature"}, "payload": {"title": "Payload", "type": "string", "description": "CMS payload in base64"}}}, "CredentialsRequestData": {"title": "CredentialsRequestData", "required": ["events", "stoken", "issueCommitmentMessage"], "type": "object", "properties": {"events": {"title": "Events", "type": "array", "items": {"$ref": "#/components/schemas/CMSSignedDataBlob"}}, "stoken": {"title": "Stoken", "type": "string", "format": "uuid", "example": "a019e902-86a0-4b1d-bff0-5c89f3cfc4d9"}, "issueCommitmentMessage": {"title": "Issuecommitmentmessage", "type": "string"}}}, "DataProviderEvent": {"title": "DataProviderEvent", "required": ["type", "unique"], "type": "object", "properties": {"type": {"allOf": [{"$ref": "#/components/schemas/EventType"}], "description": "Type of event"}, "unique": {"title": "Unique", "type": "string", "description": "Some unique string"}, "isSpecimen": {"title": "Isspecimen", "type": "boolean", "description": "Boolean", "default": false}, "negativetest": {"title": "Negativetest", "allOf": [{"$ref": "#/components/schemas/Negativetest"}], "description": "Negativetest"}, "positivetest": {"title": "Positivetest", "allOf": [{"$ref": "#/components/schemas/Positivetest"}], "description": "Positivetest"}, "vaccination": {"title": "Vaccination", "allOf": [{"$ref": "#/components/schemas/Vaccination"}], "description": "Vaccination"}, "recovery": {"title": "Recovery", "allOf": [{"$ref": "#/components/schemas/Recovery"}], "description": "Recovery"}}}, "DataProviderEventsResult": {"title": "DataProviderEventsResult", "required": ["providerIdentifier", "holder", "events"], "type": "object", "properties": {"protocolVersion": {"title": "Protocolversion", "type": "string", "description": "The semantic version of this API", "default": "3.0"}, "providerIdentifier": {"title": "Provideridentifier", "type": "string", "description": "todo"}, "status": {"title": "Status", "type": "string", "description": "enum complete/pending", "default": "complete"}, "holder": {"$ref": "#/components/schemas/Holder"}, "events": {"title": "Events", "type": "array", "items": {"$ref": "#/components/schemas/DataProviderEvent"}}}}, "DomesticGreenCard": {"title": "DomesticGreenCard", "required": ["origins", "createCredentialMessages"], "type": "object", "properties": {"origins": {"title": "Origins", "type": "array", "items": {"$ref": "#/components/schemas/GreenCardOrigin"}}, "createCredentialMessages": {"title": "Createcredentialmessages", "type": "string"}}}, "EUGreenCard": {"title": "EUGreenCard", "required": ["origins", "credential"], "type": "object", "properties": {"origins": {"title": "Origins", "type": "array", "items": {"$ref": "#/components/schemas/GreenCardOrigin"}}, "credential": {"title": "Credential", "type": "string"}}}, "EventDataProviderJWT": {"title": "EventDataProviderJWT", "required": ["provider_identifier", "unomi", "event"], "type": "object", "properties": {"provider_identifier": {"title": "Provider Identifier", "type": "string"}, "unomi": {"title": "Unomi", "type": "string", "description": "JWT containing unomi data: iss aud iat nbf exp and identity_hash."}, "event": {"title": "Event", "type": "string", "description": "JWT containing event data: same as unomi + nonce and encrypted_bsn."}}}, "EventType": {"title": "EventType", "enum": ["recovery", "positivetest", "negativetest", "vaccination", "test"], "type": "string", "description": "An enumeration."}, "GreenCardOrigin": {"title": "GreenCardOrigin", "required": ["type", "eventTime", "expirationTime", "validFrom"], "type": "object", "properties": {"type": {"title": "Type", "type": "string"}, "eventTime": {"title": "Eventtime", "type": "string"}, "expirationTime": {"title": "Expirationtime", "type": "string"}, "validFrom": {"title": "Validfrom", "type": "string"}}}, "HTTPValidationError": {"title": "HTTPValidationError", "type": "object", "properties": {"detail": {"title": "Detail", "type": "array", "items": {"$ref": "#/components/schemas/ValidationError"}}}}, "Holder": {"title": "Holder", "required": ["firstName", "lastName", "birthDate"], "type": "object", "properties": {"firstName": {"title": "Firstname", "type": "string", "example": "Herman"}, "lastName": {"title": "Lastname", "type": "string", "example": "Acker"}, "birthDate": {"title": "Birthdate", "pattern": "^[0-9]{4}-([0-9]{2}|XX)-([0-9]{2}|XX)$", "type": "string", "description": "ISO 8601 date string (large to small, YYYY-MM-DD), may contain XX on month and day", "example": "1970-01-01"}}}, "MobileAppProofOfVaccination": {"title": "MobileAppProofOfVaccination", "type": "object", "properties": {"domesticGreencard": {"$ref": "#/components/schemas/DomesticGreenCard"}, "euGreencards": {"title": "Eugreencards", "type": "array", "items": {"$ref": "#/components/schemas/EUGreenCard"}}}}, "Negativetest": {"title": "Negativetest", "required": ["sampleDate", "resultDate", "negativeResult", "facility", "type", "name", "manufacturer"], "type": "object", "properties": {"sampleDate": {"title": "Sampledate", "type": "string", "format": "date-time", "example": "2021-01-01"}, "resultDate": {"title": "Resultdate", "type": "string", "format": "date-time", "example": "2021-01-02"}, "negativeResult": {"title": "Negativeresult", "type": "boolean", "example": true}, "facility": {"title": "Facility", "type": "string", "example": "Facility1"}, "type": {"title": "Type", "type": "string", "example": "A great one"}, "name": {"title": "Name", "type": "string", "example": "Bestest"}, "manufacturer": {"title": "Manufacturer", "type": "string", "example": "Acme Inc"}, "country": {"title": "Country", "pattern": "^[A-Z]{3}$", "type": "string", "description": "Defaults to NLD", "default": "NLD", "example": "NLD"}}}, "Positivetest": {"title": "Positivetest", "required": ["sampleDate", "resultDate", "negativeResult", "facility", "type", "name", "manufacturer"], "type": "object", "properties": {"sampleDate": {"title": "Sampledate", "type": "string", "format": "date-time", "example": "2021-01-01"}, "resultDate": {"title": "Resultdate", "type": "string", "format": "date-time", "example": "2021-01-02"}, "negativeResult": {"title": "Negativeresult", "type": "boolean", "example": true}, "facility": {"title": "Facility", "type": "string", "example": "GGD XL Amsterdam"}, "type": {"title": "Type", "type": "string", "example": "???"}, "name": {"title": "Name", "type": "string", "example": "???"}, "manufacturer": {"title": "Manufacturer", "type": "string", "example": "1232"}, "country": {"title": "Country", "pattern": "^[A-Z]{3}$", "type": "string", "description": "Defaults to NLD", "default": "NLD", "example": "NLD"}}}, "PrepareIssueResponse": {"title": "PrepareIssueResponse", "required": ["stoken", "prepareIssueMessage"], "type": "object", "properties": {"stoken": {"title": "Stoken", "type": "string", "format": "uuid", "example": "a019e902-86a0-4b1d-bff0-5c89f3cfc4d9"}, "prepareIssueMessage": {"title": "Prepareissuemessage", "type": "string", "description": "A Base64 encoded prepare_issue_message", "example": "eyJpc3N1ZXJQa0lkIjoiVFNULUtFWS0wMSIsImlzc3Vlck5vbmNlIjoiaDJvQlJva1A2UTJSQXB3Sk9LdStkQT09IiwiY3JlZGVudGlhbEFtb3VudCI6Mjh9"}}}, "Recovery": {"title": "Recovery", "required": ["sampleDate", "validFrom", "validUntil"], "type": "object", "properties": {"sampleDate": {"title": "Sampledate", "type": "string", "format": "date-time", "example": "2021-01-01"}, "validFrom": {"title": "Validfrom", "type": "string", "format": "date-time", "example": "2021-01-12"}, "validUntil": {"title": "Validuntil", "type": "string", "format": "date-time", "example": "2021-06-30"}, "country": {"title": "Country", "pattern": "^[A-Z]{3}$", "type": "string", "description": "Defaults to NLD", "default": "NLD", "example": "NLD"}}}, "ServiceHealth": {"title": "ServiceHealth", "required": ["service", "is_healthy", "message"], "type": "object", "properties": {"service": {"title": "Service", "type": "string", "description": "Name of the service.", "example": "redis"}, "is_healthy": {"title": "Is Healthy", "type": "boolean"}, "message": {"title": "Message", "type": "string", "description": "A vague, non-technical, message that describe what was checked. In case of not healthy: a vague message of what went wrong.Do not add entire exceptions in this message.", "example": "Ping success!"}}}, "V2DataProviderEvent": {"title": "V2DataProviderEvent", "required": ["unique", "sampleDate", "testType", "negativeResult", "isSpecimen", "holder"], "type": "object", "properties": {"unique": {"title": "Unique", "type": "string"}, "sampleDate": {"title": "Sampledate", "type": "string", "format": "date-time"}, "testType": {"title": "Testtype", "type": "string"}, "negativeResult": {"title": "Negativeresult", "type": "boolean"}, "isSpecimen": {"title": "Isspecimen", "type": "boolean"}, "holder": {"$ref": "#/components/schemas/V2Holder"}}}, "V2Event": {"title": "V2Event", "required": ["protocolVersion", "providerIdentifier", "status", "result"], "type": "object", "properties": {"protocolVersion": {"title": "Protocolversion", "type": "string"}, "providerIdentifier": {"title": "Provideridentifier", "type": "string"}, "status": {"title": "Status", "type": "string"}, "result": {"$ref": "#/components/schemas/V2DataProviderEvent"}}, "description": "These are only negative test events. Implement an old version of the protocol. Incoming\nmessages may have protocol 2 and protocol 3.\n\nThese are not eligible for eu signing because the holder information is incomplete (name is missing, birthyear)\n\n{\n    \"protocolVersion\": \"2.0\",\n    \"providerIdentifier\": \"ZZZ\",\n    \"status\": \"complete\",\n    \"result\": {\n        \"unique\": \"19ba0f739ee8b6d98950f1a30e58bcd1996d7b3e\",\n        \"sampleDate\": \"2021-06-01T05:40:00Z\",\n        \"testType\": \"antigen\",\n        \"negativeResult\": true,\n        \"isSpecimen\": true,\n        \"holder\": {\n            \"firstNameInitial\": \"B\",\n            \"lastNameInitial\": \"B\",\n            \"birthDay\": \"9\",\n            \"birthMonth\": \"6\"\n        }\n    }\n}"}, "V2Holder": {"title": "V2Holder", "required": ["firstNameInitial", "lastNameInitial", "birthDay", "birthMonth"], "type": "object", "properties": {"firstNameInitial": {"title": "Firstnameinitial", "type": "string"}, "lastNameInitial": {"title": "Lastnameinitial", "type": "string"}, "birthDay": {"title": "Birthday", "type": "string"}, "birthMonth": {"title": "Birthmonth", "type": "string"}}}, "Vaccination": {"title": "Vaccination", "required": ["date"], "type": "object", "properties": {"date": {"title": "Date", "type": "string", "format": "date"}, "hpkCode": {"title": "Hpkcode", "type": "string", "description": "hpkcode.nl, will be used to fill EU fields", "example": "2924528"}, "type": {"title": "Type", "type": "string", "description": "Can be left blank if hpkCode is entered.", "example": "1119349007"}, "manufacturer": {"title": "Manufacturer", "type": "string", "description": "Can be left blank if hpkCode is entered.", "example": "ORG-100030215"}, "brand": {"title": "Brand", "type": "string", "description": "Can be left blank if hpkCode is entered.", "example": "EU/1/20/1507"}, "completedByMedicalStatement": {"title": "Completedbymedicalstatement", "type": "boolean", "description": "If this vaccination is enough to be fully vaccinated"}, "country": {"title": "Country", "pattern": "^[A-Z]{3}$", "type": "string", "description": "Defaults to NLD", "default": "NLD", "example": "NLD"}, "doseNumber": {"title": "Dosenumber", "type": "integer", "description": "will be based on business rules / brand info if left out", "example": 1}, "totalDoses": {"title": "Totaldoses", "type": "integer", "description": "will be based on business rules / brand info if left out", "example": 2}}, "description": "When supplying data and you want to make it easy:\n- use a HPK Code and just the amount of events.\n\nnot use a HPK and then supply non-normalized names and doseNumber/totalDoses: this makes the\nlogic evermore complex and prone to errors when incorrectly normalizing input."}, "ValidationError": {"title": "ValidationError", "required": ["loc", "msg", "type"], "type": "object", "properties": {"loc": {"title": "Location", "type": "array", "items": {"type": "string"}}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}}}}}